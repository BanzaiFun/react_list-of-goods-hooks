{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","App","useState","setIsReversed","setSortType","isStarted","setIsStarted","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAK,EACH,OAAOI,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,EAGF,IAAMO,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBU,EAAnB,KACA,EAAgCD,mBAAS,GAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAOA,OACE,sBAAKC,UAAU,MAAf,UACE,wBACEA,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAMH,GAAa,SAACI,GAAD,OAAcA,MAH5C,SAKGL,EAAY,MAAQ,UAEtBA,GACC,qCACE,wBACEE,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAML,EAAY,IAH7B,iCAQA,wBACEG,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAML,EAAY,IAH7B,4BAQA,wBACEG,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAMN,GAAc,SAACO,GAAD,OAAcA,MAH7C,qBAQA,wBACEH,UAAU,iBACVC,KAAK,SACLC,QA3CI,WACZL,EAAY,GACZD,GAAc,IAsCR,mBAQA,oBAAII,UAAU,YAAd,SACGjB,EACCD,EACAG,EACAC,GACAkB,KAAI,SAAAC,GAAI,OACR,oBAEEL,UAAU,cAFZ,SAIGK,GAHIA,eCnGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3fce32c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: number,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(0);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const reset = () => {\n    setSortType(0);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <button\n        className=\"button is-info\"\n        type=\"button\"\n        onClick={() => setIsStarted((current) => !current)}\n      >\n        {isStarted ? 'End' : 'Start'}\n      </button>\n      {isStarted && (\n        <>\n          <button\n            className=\"button is-info\"\n            type=\"button\"\n            onClick={() => setSortType(1)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            className=\"button is-info\"\n            type=\"button\"\n            onClick={() => setSortType(2)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            className=\"button is-info\"\n            type=\"button\"\n            onClick={() => setIsReversed((current) => !current)}\n          >\n            Reverse\n          </button>\n\n          <button\n            className=\"button is-info\"\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods box\">\n            {getReorderedGoods(\n              goodsFromServer,\n              sortType,\n              isReversed,\n            ).map(good => (\n              <li\n                key={good}\n                className=\"Goods__item\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}